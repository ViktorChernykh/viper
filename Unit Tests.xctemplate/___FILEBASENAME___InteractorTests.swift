//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//
//  This file was generated by the VIPER Templates,
//  see https://github.com/ViktorChernykh/viper-template
//

@testable import ___PROJECTNAMEASIDENTIFIER___
import XCTest

class ___VARIABLE_moduleName___InteractorTests: XCTestCase {
    // MARK: Subject under test

    var sut: ___VARIABLE_moduleName___Interactor!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setup___VARIABLE_moduleName___Interactor()
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setup___VARIABLE_moduleName___Interactor() {
        sut = ___VARIABLE_moduleName___Interactor()
    }

    // MARK: Test doubles

    class ___VARIABLE_moduleName___PresentationLogicSpy: ___VARIABLE_moduleName___PresentationLogic {
        var presentSomethingCalled = false

        func presentSomething(response: ___VARIABLE_moduleName___.Something.Response) {
            presentSomethingCalled = true
        }
    }

    // MARK: Tests

    func testDoSomething() {
        // Given
        let spy = ___VARIABLE_moduleName___PresentationLogicSpy()
        sut.presenter = spy
        let request = ___VARIABLE_moduleName___.Something.Request()

        // When
        sut.doSomething(request: request)

        // Then
        XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
    }
}
